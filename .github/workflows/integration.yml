
name: Integration

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: "Installing Dependencies"
      run: npm i

    - name: "Build command"
      run: npm run build

  unit-tests:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: "Installing Dependencies"
      run: npm i

    - name: "Running test cases"
      run: npm run test
      
    - name: Print environment variables
      run: printenv

    - name: Check GH_TOKEN
      run: |
         if [ -z "${{ secrets.GH_TOKEN }}" ]; then
            echo "GH_TOKEN is not set"
            exit 1
           else
            echo "GH_TOKEN is set"
          fi
    - name: Install semantic-release
      run: npm install -g semantic-release @semantic-release/changelog @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/npm

    - name: Run semantic-release
      run: npx semantic-release

    - name: Run semantic-release
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: npx semantic-release
    
    
